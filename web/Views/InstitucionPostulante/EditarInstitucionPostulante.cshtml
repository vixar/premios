@using System.Diagnostics
@using ProyectoCalidad.Domain.Entities
@*@model ProyectoCalidad.Domain.Entities.InstitucionPostulante*@
@model WebPublico.WebUI.Models.EditarInstitucionPostulanteView


@{
    Premio premio = ViewBag.premio;

    var premioID = premio.PremioID;

    var mensaje = ViewBag.mensaje;

    var htmlText = "Usted va a confirmar el registro de su ";

    if (premio.TipoPremio.Siglas == "PIMP")
    {
        ViewBag.Title = "Inscripción Unidad Postulante";
        ViewBag.encabezado = "Unidad Postulante";
        htmlText += "unidad al PIMP"; 


    }
    else
    {
        ViewBag.Title = "Inscripción para la institución postulante";
        ViewBag.encabezado = "Institución participante";
        htmlText += "institución como postulante al " + premio.TipoPremio.Siglas;
    }

}
@section styles{
    <link href="~/Content/loading.css" rel="stylesheet" />
    <link href="~/Content/loading.css" rel="stylesheet" />
    <style>
        * {
            box-sizing: border-box;
        }

        .card {
        }

        body {
            background-color: #f1f1f1;
        }



        #regForm {
            background-color: #f6f6fa;
            margin: 100px auto;
            padding: 40px;
            width: 70%;
            min-width: 300px;
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
            transition: 0.3s;
        }

        input {
            padding: 10px;
            width: 100%;
            font-size: 17px;
            border: 1px solid #aaaaaa;
        }

            /* Mark input boxes that gets an error on validation: */
            input.invalid {
                background-color: #ffdddd;
            }

        /* Hide all steps by default: */
        .tab {
            display: none;
        }

        button {
            background-color: #0069b0;
            color: #ffffff !important;
            border: none;
            padding: 10px 20px;
            font-size: 17px;
            cursor: pointer;
        }

            button:hover {
                opacity: 0.8;
            }

        #prevBtn {
            background-color: #bbbbbb;
        }

        /* Make circles that indicate the steps of the form: */
        .step {
            height: 15px;
            width: 15px;
            margin: 0 2px;
            background-color: #bbbbbb;
            border: none;
            border-radius: 50%;
            display: inline-block;
            opacity: 0.5;
        }

            .step.active {
                opacity: 1;
            }

            /* Mark the steps that are finished and valid: */
            .step.finish {
                background-color: #0069b0;
            }

        #fileUpload {
            position: relative;
            overflow: hidden;
            /*margin: 10px;*/
        }

            #fileUpload input.upload {
                position: absolute;
                top: 0;
                right: 0;
                margin: 0;
                padding: 0;
                font-size: 20px;
                cursor: pointer;
                opacity: 0;
                filter: alpha(opacity=0);
            }

        #load {
            color:red;
            width: 100%;
            height: 100%;
            
            position: fixed;
            z-index: 9999;
            background: url("../../Content/Loading.gif") no-repeat center rgba(255,255,255,255)
        }


    </style>
}
@*<div id="load" class="container center "><img src="~/Content/Loading.gif" /></div>

<div id="contents"></div>*@

<div class="page-header larger parallax custom" style="background-image:url(assets/images/page-header-bg.jpg)">
    <div class="container">
        <h1>@ViewBag.Title</h1>
        <ol class="breadcrumb">
            <li><a href="index.html">Inicio</a></li>
            <li><a href="#">Insititución</a></li>
            <li class="active">Postulante</li>
        </ol>
    </div><!-- End .container -->
</div><!-- End .page-header -->

<div class="card">
    <div class="">
        @using (Html.BeginForm("EditarInstitucionPostulante", "InstitucionPostulante", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "", @role = "form", @id = "regForm" }))
        {

            @Html.HiddenFor(m => m.InstitucionPostulante.InstitucionID)
            @Html.HiddenFor(m => m.InstitucionPostulante.InstitucionNombre)
            @Html.HiddenFor(m => m.InstitucionPostulante.UserID)
            @*@Html.Hidden("InstitucionID", Model.InstitucionPostulante.InstitucionID)*@
            @*@Html.Hidden("InstitucionNombre", Model.InstitucionPostulante.InstitucionNombre)
            @Html.Hidden("FuncionarioID", Model.InstitucionPostulante.InstitucionNombre)
            @Html.Hidden("UserID", Model.InstitucionPostulante.UserID)*@

            @Html.AntiForgeryToken()
            <!-- One "tab" for each step in the form: -->
            <div class="tab">
                <h2>Selección de Premio a Postular y Guía</h2>

                <div class="row">
                    <div class="col-sm-8">
                        <label class="input-desc">@ViewBag.encabezado</label>
                        <div class="">
                            @Html.DropDownList("OrganismoID", null, "-- Seleccione su institución --", new { @class = "form-control", @required = "", Disabled = "Disabled" })
                        </div>
                    </div><!-- End .col-sm-6 -->

                    @if (premio.TipoPremio.Siglas == "PIMP")
                    {
                        <div class="col-sm-8" id="responsable">
                            <label class="input-desc">Persona Responsable de la Postulaci&oacute;n</label>
                            <div class="">
                                @Html.TextBoxFor(model => model.InstitucionPostulante.FucionarioResponsable, new { @class = "form-control", @required = "", Disabled = "Disabled" })
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="col-sm-8" id="responsable">
                            <label class="input-desc">Persona Responsable de la Postulaci&oacute;n</label>
                            <div class="">
                                @Html.DropDownList("FuncionarioID", null, new { @class = "form-control", @required = "", Disabled = "Disabled" })
                            </div>
                        </div>
                    }
                    <div class="col-sm-8" id="institucion">
                    </div>
                    @*<div class="col-sm-8">
                        <label class="input-desc">Premio a Postular</label>
                        <div class="">
                            @Html.DropDownList("PremioID", null, "-- Seleccione un premio --", new { @class = "form-control", @required = "", disabled = "disabled" })
                        </div>
                    </div>*@<!-- End .col-sm-6 -->

                    <div class="col-sm-8">
                        <label class="input-desc">Guia a Completar</label>
                        <div class="">
                            @*@Html.DropDownList("PremioGuiaID", null, "-- Seleccione --", new { @class = "form-control" })*@
                            @Html.DropDownListFor(g => g.InstitucionPostulante.PremioGuiaID, new SelectList(Model.PremioGuias, "PremioGuiaID", "Descripcion"), "--Seleccione--", new { @class = "form-control" })

                            @*@if (premioID == 3)
                            {
                                @Html.DropDownList("PremioGuiaID", null, "-- Seleccione --", new {@class = "form-control"})
                            }
                            else
                            {
                                @Html.DropDownList("PremioGuiaID", new SelectList(""), "-- Seleccione --", new {@class = "form-control"})
                            }*@

                        </div>
                    </div><!-- End .col-sm-6 -->

                    @if (premio.TipoPremio.Siglas != "PIMP")
                    {
                        <div class="">
                            <lable>Compromiso de postulación <code>.pdf</code></lable>
                            <div id="fileUpload" class="btn btn-primary">

                                <span><i class="fa fa-paperclip"></i>Adjuntar</span>

                                <input id="carta" type="file" class="upload" name="uploads" />

                            </div><br />
                            <br />
                            <p style="font-weight: bolder"><code style="font-size: 1.5em">Importante:</code> Documento debidamente completado, firmado por la máxima autoridad y sellado.</p>
                            <span id="filename">Aún sin seleccionar</span>

                            <br />
                            <br />
                        </div>
                    }




                    @*<div class="col-sm-8" id="institucion">

                    </div>*@
                </div>

            </div>
            @*<div class="tab">
                <h2>Responsable de la Postulación</h2>
                <div class="row">
                    @*<div class="col-sm-6 col-xs-12">
                        <label class="input-desc">Seleccione la persona responsable</label>
                        <div class="">
                            @Html.DropDownList("FuncionarioID", null, "-- Seleccione un usuario --", new { @class = "form-control", @required = "" })
                        </div>
                    </div>
                    <div class="col-sm-1" style="border-right-style: dotted;border-color: #7bafd5; height: 200px; width: 1px">  </div>

                    <div class="col-sm-5 col-xs-12">
                        <div class="">
                            <label class="input-desc">Registre los datos de la persona responsable</label>
                            <input class="form-control" type="text" placeholder="Nombre" name="name" value="" disabled="" />
                            <input class="form-control" type="text" placeholder="Apellidos" name="name" value="" disabled="" />
                            <input class="form-control" type="text" placeholder="Cargo" name="name" value="" disabled="" />
                        </div>
                    </div>
                </div>

            </div>*@
            @*<div class="tab">
                <h2>Presentar Compromiso</h2>
                <div class="row">
                    <div class="col-sm-12">

                        <div class="">
                            <lable>Compromiso de postulación <code>.pdf</code></lable>
                            <div id="fileUpload" class="btn btn-primary">

                                <span><i class="fa fa-paperclip"></i>Adjuntar</span>

                                <input id="carta" type="file" class="upload" name="uploads" />

                            </div><br />
                            <br />
                            <p style="font-weight: bolder"><code style="font-size: 1.5em">Importante:</code> Documento debidamente completado, firmado por la máxima autoridad y sellado.</p>
                            <span id="filename">Aún sin seleccionar</span>

                            <br />
                            <br />
                        </div>
                    </div>
                </div>
            </div>*@
            @*<div class="tab">
                Birthday:
                <p><input placeholder="dd" oninput="this.className = ''" name="dd"></p>
                <p><input placeholder="mm" oninput="this.className = ''" name="nn"></p>
                <p><input placeholder="yyyy" oninput="this.className = ''" name="yyyy"></p>
            </div>
            <div class="tab">
                Login Info:
                <p><input placeholder="Username..." oninput="this.className = ''" name="uname"></p>
                <p><input placeholder="Password..." oninput="this.className = ''" name="pword" type="password"></p>
            </div>*@
            <div style="overflow: auto;">
                <div>
                    <button type="button" id="prevBtn" onclick="nextPrev(-1)">Anterior</button>
                    <button type="button" id="nextBtn" onclick="nextPrev(1)">Siguiente</button>
                </div>



            </div>
            <!-- Circles which indicates the steps of the form: -->
            <div style="text-align: center; margin-top: 40px;">
                <span class="step"></span>
                @*<span class="step"></span>*@
                @*<span class="step"></span>*@
                @*<span class="step"></span>*@
            </div>

        }

        @*// We want to show this while the server process is running:*@
        <div id="divProcessing">
            <p>
                Processing, please wait . . .
                <img src="~/Content/assets/images/loading.gif" />
            </p>
        </div>


    </div>
</div>

<div id="coverScreen" class="LockOn">

</div>


@section scripts{

    <script src="~/Content/assets/sweetalert2.all.min.js"></script>

    <script src="~/Content/assets/js/bootstrap-filestyle.min.js"></script>
    <script src="~/Content/assets/js/jquery-1.8.3.js"></script>

    <script type="text/javascript">
        function ShowMsg() {
            alert('Cargando...');
        }
    </script>

    @* MANDAR A EJECUTAR LA FUNCION *@
    @if (ViewBag.Loading != null)
    {

        <script type="text/javascript">
            @Html.Raw(ViewBag.Loading)
            debugger;
        </script>

    }

    <script>

        function aceptarOrganismo(id) {
            Swal.fire({
                html: "@htmlText",
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'De acuerdo'
            }).then((result) => {
                if (result.value) {

                    $("#coverScreen").show();

                    document.getElementById("regForm").submit();

                }
            });
        }

    $(document).ready(function () {

        if ('@mensaje.tipo'.length > 0) {
            debugger;

                Swal.fire({
                    type: '@mensaje.tipo',
                    title: '@mensaje.mensaje',
                    html: '@mensaje.texto',
                    showConfirmButton: false,
                    timer: 2500
                });


        }

            $("#coverScreen").hide();

            // Hide the "busy" Gif at load:
            $("#divProcessing").hide();

            // Attach click handler to the submit button
        });

        $(document).ready(function () {

            if ('@TempData["mensaje"]' === 'sizeArchivo') {
                Swal.fire({
                    type: 'warning',
                    title: 'Tamaño de Archivo',
                    html: '@TempData["texto"]'
                });
            }

            if ('@TempData["mensaje"]' === 'error') {
                Swal.fire({
                    type: 'error',
                    title: 'Hubo un Error',
                    html: '@TempData["texto"]'
                });
            }

            if ('@TempData["mensaje"]' === 'institucionNoExiste') {
                Swal.fire({
                    type: 'error',
                    title: 'No Existe',
                    html: '@TempData["texto"]'
                });
            }

            $("#InstitucionNombre").change(function() {
                var insitucionID = $(this).val();
                console.log("ID: ", insitucionID);
                $.ajax({
                    type: "post",
                    url: "/sgp/InstitucionPostulante/GetInstitucionInfo?institucion=" + insitucionID,
                    contentType: "html",
                    success: function(response) {
                        console.log(response);
                        $("#institucion").empty();
                        $("#institucion").append(response);
                    }
                });
            });

            //PREMIOGUIAID
            $("#PremioID").change(function () {
                var premioID = $(this).val();
                $.ajax({
                    type: "post",
                    url: "/sgp/InstitucionPostulante/GetPremioGuia?premioID=" + premioID,
                    contentType: "html",
                    success: function (response) {
                        $("#PremioGuiaID").empty();
                        $("#PremioGuiaID").append(response);
                    }
                });
            });

            $("input[id='carta']").change(function(e) {
                var $this = $(this);
                $("#filename").html($this.val().split('\\').pop());
                $("#filename").change().html(function() {
                    console.log("donde estoy: ", $(this));
                    $("#filename").html($this.val().split('\\').pop()).css({
                        "font-weight": "bolder"
                    });
                });
            });

        });

        var currentTab = 0; // Current tab is set to be the first tab (0)
        showTab(currentTab); // Display the current tab

        function showTab(n) {
            // This function will display the specified tab of the form...
            var x = document.getElementsByClassName("tab");
            x[n].style.display = "block";
            //... and fix the Previous/Next buttons:
            if (n == 0) {
                document.getElementById("prevBtn").style.display = "none";
            } else {
                document.getElementById("prevBtn").style.display = "inline";
            }
            if (n == (x.length - 1)) {
                document.getElementById("nextBtn").innerHTML = "Confirmar Postulación";
            } else {
                document.getElementById("nextBtn").innerHTML = "Siguiente";
            }
            //... and run a function that will display the correct step indicator:
            fixStepIndicator(n);
        }

        function nextPrev(n) {

            // This function will figure out which tab to display
            var x = document.getElementsByClassName("tab");
            // Exit the function if any field in the current tab is invalid:
            // if (n === 1 && !validateForm()) return false;
            // Hide the current tab:
            x[currentTab].style.display = "none";
            // Increase or decrease the current tab by 1:
            currentTab = currentTab + n;
            //alert('Hola');

            console.log("Current Tap:", currentTab);
            // if you have reached the end of the form...
            if (currentTab >= x.length) {

                // alert('Hola');

                //confirmacion();
                // ... the form gets submitted:
                //alert('hola');
                //debugger;

                //$("regForm").on("submit",
                //    function (event) {

                //        event.preventDefault();
                //        // Show the "busy" Gif:
                //        $("#divProcessing").show();
                //    });

                aceptarOrganismo();

                return false;
            }
            // Otherwise, display the correct tab:
            showTab(currentTab);
        };

        function validateForm() {
            alert('Hola');

            // This function deals with validation of the form fields
            var x, y, i, valid = true;
            x = document.getElementsByClassName("tab");
            y = x[currentTab].getElementsByTagName("input");
            // A loop that checks every input field in the current tab:
            for (i = 0; i < y.length; i++) {
                // If a field is empty...
                if (y[i].value === "" && !y[i].disabled) {
                    //console.log("Valor del Y ", !y[i].disabled);
                    // add an "invalid" class to the field:
                    y[i].className += " invalid";
                    // and set the current valid status to false
                    valid = false;
                }
            }
            // If the valid status is true, mark the step as finished and valid:
            if (valid) {
                document.getElementsByClassName("step")[currentTab].className += " finish";
            }
            return valid; // return the valid status
        }

        function fixStepIndicator(n) {
            // This function removes the "active" class of all steps...
            var i, x = document.getElementsByClassName("step");
            for (i = 0; i < x.length; i++) {
                x[i].className = x[i].className.replace(" active", "");
            }
            //... and adds the "active" class on the current step:
            x[n].className += " active";
        }

        //document.onreadystatechange = function () {
        //    var state = document.readyState;
        //    console.log(state)
        //    if (state == 'interactive') {
        //        document.getElementById('contents').style.visibility = "hidden";

        //    } else if (state == 'complete') {
        //        setTimeout(function () {
        //            document.getElementById('interactive');
        //            document.getElementById('load').style.visibility = "hidden";
        //            document.getElementById('contents').style.visibility = "visible";
        //        }, 2000);
        //    } 
        //    }
        
    </script>


}