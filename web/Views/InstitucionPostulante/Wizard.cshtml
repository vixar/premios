@model ProyectoCalidad.Domain.Entities.InstitucionPostulante

@{
    ViewBag.Title = "wizard";
}
@section styles{
    <style>
        * {
            box-sizing: border-box;
        }

        .card {
        }

        body {
            background-color: #f1f1f1;
        }

        #regForm {
            background-color: #f6f6fa;
            margin: 100px auto;
            padding: 40px;
            width: 70%;
            min-width: 300px;
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
            transition: 0.3s;
        }

        input {
            padding: 10px;
            width: 100%;
            font-size: 17px;
            border: 1px solid #aaaaaa;
        }

            /* Mark input boxes that gets an error on validation: */
            input.invalid {
                background-color: #ffdddd;
            }

        /* Hide all steps by default: */
        .tab {
            display: none;
        }

        button {
            background-color: #0069b0;
            color: #ffffff !important;
            border: none;
            padding: 10px 20px;
            font-size: 17px;
            cursor: pointer;
        }

            button:hover {
                opacity: 0.8;
            }

        #prevBtn {
            background-color: #bbbbbb;
        }

        /* Make circles that indicate the steps of the form: */
        .step {
            height: 15px;
            width: 15px;
            margin: 0 2px;
            background-color: #bbbbbb;
            border: none;
            border-radius: 50%;
            display: inline-block;
            opacity: 0.5;
        }

            .step.active {
                opacity: 1;
            }

            /* Mark the steps that are finished and valid: */
            .step.finish {
                background-color: #0069b0;
            }

        #fileUpload {
            position: relative;
            overflow: hidden;
            /*margin: 10px;*/
        }

            #fileUpload input.upload {
                position: absolute;
                top: 0;
                right: 0;
                margin: 0;
                padding: 0;
                font-size: 20px;
                cursor: pointer;
                opacity: 0;
                filter: alpha(opacity=0);
            }
    </style>
}

<div class="page-header larger parallax custom" style="background-image:url(assets/images/page-header-bg.jpg)">
    <div class="container">
        <h1>Institución Postulante</h1>
        <ol class="breadcrumb">
            <li><a href="index.html">Inicio</a></li>
            <li><a href="#">Insititución</a></li>
            <li class="active">Postulante</li>
        </ol>
    </div><!-- End .container -->
</div><!-- End .page-header -->

<div class="card">
    <div class="">
        @using (Html.BeginForm("EditarInstitucionPostulante", "InstitucionPostulante", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "", @role = "form", @id = "regForm" }))
        {

            <!-- One "tab" for each step in the form: -->
            <div class="tab">
                <h2>Selección de empresa y de premio</h2>

                <div class="row">
                    <div class="col-sm-8">
                        <label class="input-desc">Institución participante</label>
                        <div class="">
                            @Html.DropDownList("InstitucionID", null, "-- Seleccione su institución --", new { @class = "form-control", @required = "" })
                        </div>
                    </div><!-- End .col-sm-6 -->
                    <div class="col-sm-8" id="institucion">

                    </div>
                    <div class="col-sm-8">
                        <label class="input-desc">Premio a participar</label>
                        <div class="">
                            @Html.DropDownList("PremioID", null, "-- Seleccione un premio --", new { @class = "form-control", @required = "" })
                            <p class="text-muted"> Seleccione el premio</p>
                        </div>
                    </div><!-- End .col-sm-6 -->
                    @*<div class="col-sm-8" id="institucion">

                        </div>*@
                </div>

            </div>
            <div class="tab">
                <h2>Compromisos</h2>
                <div class="row">
                    <div class="col-sm-8">
                        <label class="input-desc">Usuario con la Máxima autoridad dentro del premio</label>
                        <div class="">
                            @Html.DropDownList("UserID", null, "-- Seleccione la persona de Máxima autoridad --", new { @class = "form-control", @required = "" })
                        </div>
                    </div>
                    <div class="col-sm-8">
                        <label class="input-desc">Usuario con la Máxima autoridad dentro del premio</label>
                        <div class="">
                            <div id="fileUpload" class="btn btn-primary">
                                <span><i class="fa fa-paperclip"></i>Adjuntar Carta</span>
                                <input type="file" class="upload" name="RutaCartaCompromiso" />
                            </div>
                            <br />
                            <br />
                        </div>
                    </div>
                </div>
            </div>
            @*<div class="tab">
                Birthday:
                <p><input placeholder="dd" oninput="this.className = ''" name="dd"></p>
                <p><input placeholder="mm" oninput="this.className = ''" name="nn"></p>
                <p><input placeholder="yyyy" oninput="this.className = ''" name="yyyy"></p>
            </div>
            <div class="tab">
                Login Info:
                <p><input placeholder="Username..." oninput="this.className = ''" name="uname"></p>
                <p><input placeholder="Password..." oninput="this.className = ''" name="pword" type="password"></p>
            </div>*@
            <div style="overflow: auto;">
                <div>
                    <button type="button" id="prevBtn" onclick="nextPrev(-1)">Anterior</button>
                    <button type="button" id="nextBtn" onclick="nextPrev(1)">Siguiente</button>
                </div>



            </div>
            <!-- Circles which indicates the steps of the form: -->
            <div style="text-align: center; margin-top: 40px;">
                <span class="step"></span>
                <span class="step"></span>
                @*<span class="step"></span>
                <span class="step"></span>*@
            </div>

        }




    </div>
</div>




@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-filestyle/2.1.0/bootstrap-filestyle.min.js"></script>
    <script>
        //$(":file").filestyle({ buttonText: "Subir archivo" });

        $(document).ready(function () {
            $("#InstitucionNombre").change(function () {
                var insitucionID = $(this).val();
                console.log("ID: ", insitucionID);
                $.ajax({
                    type: "post",
                    url: "/InstitucionPostulante/GetInstitucionInfo?institucion=" + insitucionID,
                    contentType: "html",
                    success: function (response) {
                        console.log(response);
                        $("#institucion").empty();
                        $("#institucion").append(response);
                    }
                });
            });
        });

        var currentTab = 0; // Current tab is set to be the first tab (0)
        showTab(currentTab); // Display the current tab

        function showTab(n) {
            // This function will display the specified tab of the form...
            var x = document.getElementsByClassName("tab");
            x[n].style.display = "block";
            //... and fix the Previous/Next buttons:
            if (n == 0) {
                document.getElementById("prevBtn").style.display = "none";
            } else {
                document.getElementById("prevBtn").style.display = "inline";
            }
            if (n == (x.length - 1)) {
                document.getElementById("nextBtn").innerHTML = "Submit";
            } else {
                document.getElementById("nextBtn").innerHTML = "Siguiente";
            }
            //... and run a function that will display the correct step indicator:
            fixStepIndicator(n);
        }

        function nextPrev(n) {
            // This function will figure out which tab to display
            var x = document.getElementsByClassName("tab");
            // Exit the function if any field in the current tab is invalid:
            if (n == 1 && !validateForm()) return false;
            // Hide the current tab:
            x[currentTab].style.display = "none";
            // Increase or decrease the current tab by 1:
            currentTab = currentTab + n;
            // if you have reached the end of the form...
            if (currentTab >= x.length) {
                // ... the form gets submitted:
                document.getElementById("regForm").submit();
                return false;
            }
            // Otherwise, display the correct tab:
            showTab(currentTab);
        }

        function validateForm() {
            // This function deals with validation of the form fields
            var x, y, i, valid = true;
            x = document.getElementsByClassName("tab");
            y = x[currentTab].getElementsByTagName("input");
            // A loop that checks every input field in the current tab:
            for (i = 0; i < y.length; i++) {
                // If a field is empty...
                if (y[i].value == "") {
                    // add an "invalid" class to the field:
                    y[i].className += " invalid";
                    // and set the current valid status to false
                    valid = false;
                }
            }
            // If the valid status is true, mark the step as finished and valid:
            if (valid) {
                document.getElementsByClassName("step")[currentTab].className += " finish";
            }
            return valid; // return the valid status
        }

        function fixStepIndicator(n) {
            // This function removes the "active" class of all steps...
            var i, x = document.getElementsByClassName("step");
            for (i = 0; i < x.length; i++) {
                x[i].className = x[i].className.replace(" active", "");
            }
            //... and adds the "active" class on the current step:
            x[n].className += " active";
        }
    </script>


}


